import { NCBaseError } from '@errors';
import { NcAccountRbacError, NcPartnerRbacError, NcRbacError } from '@errors/NcRbacError';

/* eslint-disable @typescript-eslint/no-unused-vars */
export function errorHandler(err, req, res, next) {
  // if (res.headersSent) {
  //  return next(err)
  // }

  // Set status code if the error contains a status code

  if (err instanceof NCBaseError || err.status) {
    res.status(err.status);
  }
  else if (err instanceof NcRbacError ||
    err instanceof NcAccountRbacError ||
    err instanceof NcPartnerRbacError ||
    (err.errorType && err.errorType === 'NcRbacError') ||
    (err.errorType && err.errorType === 'NcAccountRbacError') ||
    (err.errorType && err.errorType === 'NcPartnerRbacError')) {
    res.status(401);
  }
  else {
    res.status(500);
  }

  res.json({ message: err.message, errors: err.errors }).send();
}
